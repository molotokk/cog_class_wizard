{'private_data': [{'default': 0, 'returns': 'int', 'name': 'stereoProcessorType'}, {'default': 1, 'returns': 'double', 'name': 'factor'}, {'default': 'stereoprocessor_parameters.yml', 'returns': 'std::wstring', 'name': 'parameterSetFile'}, {'returns': 'cv::Point', 'name': 'offset'}], 'properties': [{'returns': 'std::wstring', 'modifies': 'parameterSetFile', 'name': 'parameterSetFile'}, {'returns': 'cv::Point', 'modifies': 'offset', 'name': 'offset'}], 'methods': [{'returns': 'bool', 'name': 'init', 'visibility': 'public'}, {'returns': 'bool', 'name': 'process', 'visibility': 'public', 'arguments': 'const cv::InputArray src1, const cv::InputArray src2, cv::OutputArray dst'}, {'returns': 'bool', 'name': 'loadParameters', 'visibility': 'private', 'arguments': 'const std::wstring& filePath'}, {'returns': 'bool', 'name': 'saveParameters', 'visibility': 'private', 'arguments': 'const std::wstring& filePath'}, {'returns': 'void', 'name': 'performPanSharpening', 'visibility': 'protected', 'arguments': 'cv::InputArray visibleMono, cv::InputArray thermal, cv::OutputArray dst, cv::Point offset = cv::Point(0, 0)'}, {'returns': 'void', 'name': 'translateImage', 'visibility': 'protected', 'arguments': 'cv::InputArray src, cv::OutputArray dst, cv::Point offset = cv::Point(0, 0)'}, {'returns': 'void', 'name': 'zoomImage', 'visibility': 'protected', 'arguments': 'cv::InputArray src, cv::OutputArray dst, double factor = 1'}], 'class': 'PanSharpener'}


{'private_data': [{'default': 0, 'returns': 'int', 'name': 'stereoProcessorType'}, {'default': 1, 'returns': 'double', 'name': 'factor'}, {'default': 'stereoprocessor_parameters.yml', 'returns': 'std::wstring', 'name': 'parameterSetFile'}, {'returns': 'cv::Point', 'name': 'offset'}], 'properties': [{'returns': 'std::wstring', 'modifies': 'parameterSetFile', 'name': 'parameterSetFile'}, {'returns': 'cv::Point', 'modifies': 'offset', 'name': 'offset'}], 'methods': [{'returns': 'bool', 'name': 'init', 'visibility': 'public'}, {'returns': 'bool', 'name': 'init', 'visibility': 'public', 'arguments': 'const cv::InputArray src1, const cv::InputArray src2, cv::OutputArray dst'}, {'returns': 'bool', 'name': 'loadParameters', 'visibility': 'private', 'arguments': 'const std::wstring& filePath'}, {'returns': 'bool', 'name': 'saveParameters', 'visibility': 'private', 'arguments': 'const std::wstring& filePath'}, {'returns': 'void', 'name': 'performPanSharpening', 'visibility': 'protected', 'arguments': 'cv::InputArray visibleMono, cv::InputArray thermal, cv::OutputArray dst, cv::Point offset = cv::Point(0, 0)'}, {'returns': 'void', 'name': 'translateImage', 'visibility': 'protected', 'arguments': 'cv::InputArray src, cv::OutputArray dst, cv::Point offset = cv::Point(0, 0)'}, {'returns': 'void', 'name': 'zoomImage', 'visibility': 'protected', 'arguments': 'cv::InputArray src, cv::OutputArray dst, double factor = 1'}], 'class': 'PanSharpener'}